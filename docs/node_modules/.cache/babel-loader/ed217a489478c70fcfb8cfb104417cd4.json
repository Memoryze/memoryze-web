{"ast":null,"code":"var _jsxFileName = \"/Users/alishalawani/memoryze-co/memoryze-web/src/Components/Shared/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Icon from '../../../assetsassets/LogoWithText.png';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const [enableSidebar, setEnableSidebar] = useState(true);\n  const [scrolling, setScrolling] = useState(false);\n  const [links] = useState([{\n    url: '/',\n    text: 'Home'\n  }, {\n    url: '/for-educators',\n    text: 'For Educators'\n  }, {\n    url: '/faqs',\n    text: 'FAQs'\n  }]);\n\n  const listenToScrollEvent = e => {\n    if (window.scrollY > 5) {\n      setScrolling(true);\n    } else {\n      setScrolling(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenToScrollEvent);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: scrolling ? 'navigation navigation-with-background' : 'navigation',\n    children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n      href: \"/\",\n      className: \"logo\",\n      children: \"Memoryze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      className: \"mr-auto header-links\",\n      children: links.map(({\n        url,\n        text\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !enableSidebar ? 'closeBtn' : 'bars',\n      onClick: () => {\n        setEnableSidebar(!enableSidebar);\n      },\n      children: !enableSidebar ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xD7\"\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\u2630\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), !enableSidebar && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mySidenav\",\n      className: \"sidenav\",\n      children: links.map(({\n        url,\n        text\n      }, i) => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url,\n          className: \"side-link\",\n          onClick: () => {\n            setEnableSidebar(true);\n          },\n          children: text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Header, \"KPSPumrOW/zS5zcTjh5piO/Reek=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/alishalawani/memoryze-co/memoryze-web/src/Components/Shared/Header/Header.js"],"names":["React","useEffect","useState","Navbar","Nav","Icon","Header","enableSidebar","setEnableSidebar","scrolling","setScrolling","links","url","text","listenToScrollEvent","e","window","scrollY","addEventListener","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,wCAAjB;AACA,OAAO,cAAP;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACjB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,IAAUT,QAAQ,CAAC,CACxB;AAAEU,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GADwB,EAExB;AAAED,IAAAA,GAAG,EAAE,gBAAP;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAFwB,EAGxB;AAAED,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAHwB,CAAD,CAAxB;;AAKA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AAClC,QAAIC,MAAM,CAACC,OAAP,GAAiB,CAArB,EAAwB;AACvBP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,KAFD,MAEO;AACNA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD,GAND;;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACfe,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCJ,mBAAlC;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAEL,SAAS,GAAG,uCAAH,GAA6C,YAAtE;AAAA,4BACC,QAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,IAAI,EAAC,GAAnB;AAAuB,MAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACEE,KAAK,CAACQ,GAAN,CAAU,CAAC;AAAEP,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAD,KAAmB;AAC7B,4BAAO;AAAG,UAAA,IAAI,EAAED,GAAT;AAAA,oBAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFA;AADF;AAAA;AAAA;AAAA;AAAA,YAJD,eAUC;AACC,MAAA,SAAS,EAAE,CAACN,aAAD,GAAiB,UAAjB,GAA8B,MAD1C;AAEC,MAAA,OAAO,EAAE,MAAM;AACdC,QAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACA,OAJF;AAAA,gBAKE,CAACA,aAAD,gBAAiB;AAAA;AAAA,uBAAjB,gBAAgC;AAAA;AAAA;AALlC;AAAA;AAAA;AAAA;AAAA,YAVD,EAiBE,CAACA,aAAD,iBACA;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,SAAS,EAAC,SAA9B;AAAA,gBACEI,KAAK,CAACQ,GAAN,CAAU,CAAC;AAAEP,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAD,EAAgBO,CAAhB,KAAsB;AAChC,4BACC;AACC,UAAA,IAAI,EAAER,GADP;AAEC,UAAA,SAAS,EAAC,WAFX;AAGC,UAAA,OAAO,EAAE,MAAM;AACdJ,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,WALF;AAAA,oBAOEK;AAPF,WAMMO,CANN;AAAA;AAAA;AAAA;AAAA,gBADD;AAWA,OAZA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqCA;;GAxDQd,M;;KAAAA,M;AA0DT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Icon from '../../../assetsassets/LogoWithText.png';\nimport './Header.css';\n\nfunction Header() {\n\tconst [enableSidebar, setEnableSidebar] = useState(true);\n\tconst [scrolling, setScrolling] = useState(false);\n\tconst [links] = useState([\n\t\t{ url: '/', text: 'Home' },\n\t\t{ url: '/for-educators', text: 'For Educators' },\n\t\t{ url: '/faqs', text: 'FAQs' },\n\t]);\n\tconst listenToScrollEvent = (e) => {\n\t\tif (window.scrollY > 5) {\n\t\t\tsetScrolling(true);\n\t\t} else {\n\t\t\tsetScrolling(false);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', listenToScrollEvent);\n\t}, []);\n\n\treturn (\n\t\t<nav className={scrolling ? 'navigation navigation-with-background' : 'navigation'}>\n\t\t\t<Navbar.Brand href='/' className='logo'>\n\t\t\t\tMemoryze\n\t\t\t</Navbar.Brand>\n\t\t\t<Nav className='mr-auto header-links'>\n\t\t\t\t{links.map(({ url, text }) => {\n\t\t\t\t\treturn <a href={url}>{text}</a>;\n\t\t\t\t})}\n\t\t\t</Nav>\n\n\t\t\t<div\n\t\t\t\tclassName={!enableSidebar ? 'closeBtn' : 'bars'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetEnableSidebar(!enableSidebar);\n\t\t\t\t}}>\n\t\t\t\t{!enableSidebar ? <>&times;</> : <>&#9776;</>}\n\t\t\t</div>\n\t\t\t{!enableSidebar && (\n\t\t\t\t<div id='mySidenav' className='sidenav'>\n\t\t\t\t\t{links.map(({ url, text }, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={url}\n\t\t\t\t\t\t\t\tclassName='side-link'\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetEnableSidebar(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tkey={i}>\n\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</nav>\n\t);\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}